const models = require('../models/workoutModel')
const mongoose = require('mongoose')

//Function to get all workouts
const getAllWorkouts = async (req, res) => {
    const workouts = await models.find({}).sort({createdAt: -1})

    res.status(200).json(workouts)
}

//Function to get a single workout
const getWorkout = async (req, res) => {
    const { id } = req.params

    if (!mongoose.Types.ObjectId.isValid(id)) {
        return res.status(400).json({error: "No such workout"})
    }

    const workout = await models.findById(id)

    if (!workout) {
        return res.status(404).json({error: "No such workout"})
    }
    return res.status(200).json(workout)
}

//Function to create a new workout
const createWorkout = async (req, res) => {
    const {title, reps, load} = req.body

    let emptyFields = []

    if (!title) {
        emptyFields.push("title")
    }
    if(!reps) {
        emptyFields.push("reps")
    }
    if(!load) {
        emptyFields.push("load")
    }
    if (emptyFields.length > 0) {
        return (res.status(400).json({error: 'Please fill in all the fields.', emptyFields}))
    }

    try {
        //Creates the workout model
        const workout = await models.create({title, reps, load})
        res.status(200).json(workout)
    } catch(error) {
        res.status(400).json({error: error.message})
    }
}

//Function to delete a workout
const deleteWorkout = async (req, res) => {
    const { id } = req.params

    if (!mongoose.Types.ObjectId.isValid(id)) {
        return res.status(400).json({error: "No such workout"})
    }

    const workout = await models.findOneAndDelete({_id: id})

    if (!workout) {
        return res.status(404).json({error: "No such workout"})
    }
    return res.status(200).json(workout)
}

//Function to update a workout
const updateWorkout = async (req, res) => {
    const { id } = req.params

    if (!mongoose.Types.ObjectId.isValid(id)) {
        return res.status(400).json({error: "No such workout"})
    }

    const workout = await models.findOneAndUpdate({_id: id}, {...req.body})

    if (!workout) {
        return res.status(404).json({error: "No such workout"})
    }
    return res.status(200).json(workout)
}


module.exports = {
    getAllWorkouts,
    getWorkout,
    createWorkout,
    deleteWorkout,
    updateWorkout
}